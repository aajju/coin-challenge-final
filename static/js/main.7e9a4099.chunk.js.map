{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","isDarkAtom","atom","key","default","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","isDark","useRecoilValue","type","series","map","item","x","time_close","y","open","high","low","close","options","theme","mode","chart","height","background","toolbar","show","title","text","align","xaxis","yaxis","tooltip","enabled","Rows","styled","div","Row","props","textColor","Changes","Change","isRed","Price","info","price","console","log","quotes","USD","percent_change_15m","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","started_at","proof_type","ath_price","ath_date","percent_from_price_ath","Container","Header","header","Back","button","bgColor","accentColor","Title","h1","DarkToggle","Loader","span","OverView","OverViewItem","Description","Tabs","Tab","isActive","Coin","useParams","state","useLocation","chartMatch","useRouteMatch","priceMatch","useRecoilState","DarkAtom","setDarkAtom","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","name","to","onClick","prev","rank","symbol","toFixed","description","total_supply","max_supply","toLocaleString","pathname","path","CoinsList","ul","CoinCard","li","cardBgColor","Img","img","Coins","slice","coin","id","src","toLowerCase","Router","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.7e9a4099.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\n\nexport interface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\nexport interface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 4;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: true,\n});\n","import { useQuery } from \"react-query\";\n\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistoricalTypes {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistoricalTypes[]>(\n    [\"ohlcv\", coinId],\n    () => {\n      return fetchCoinHistory(coinId);\n    },\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  const isDark = useRecoilValue(isDarkAtom);\n\n  // console.log(isLoading, data);\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <>\n          <ApexChart\n            type=\"candlestick\"\n            series={[\n              {\n                data: data?.map((item) => {\n                  return {\n                    x: item.time_close,\n                    y: [item.open, item.high, item.low, item.close],\n                  };\n                }),\n              },\n            ]}\n            options={{\n              theme: {\n                mode: isDark ? \"dark\" : \"light\",\n              },\n              chart: {\n                type: \"candlestick\",\n                height: 500,\n                background: \"transparent\",\n                toolbar: {\n                  show: false,\n                },\n              },\n              title: {\n                text: \"CandleStick Chart\",\n                align: \"left\",\n              },\n              xaxis: {\n                type: \"datetime\",\n              },\n              yaxis: {\n                tooltip: {\n                  enabled: true,\n                },\n              },\n            }}\n          />\n          {/* <ApexChart\n            type=\"line\"\n            series={[\n              {\n                name: \"Price\",\n                data: data?.map((price) => price.close),\n              },\n            ]}\n            options={{\n              theme: {\n                mode: isDark ? \"dark\" : \"light\",\n              },\n              chart: {\n                height: 300,\n                width: 500,\n                toolbar: {\n                  show: false,\n                },\n                background: \"transparent\",\n              },\n              grid: { show: false },\n              stroke: {\n                curve: \"smooth\",\n                width: 4,\n              },\n\n              yaxis: {\n                show: false,\n              },\n              xaxis: {\n                axisBorder: { show: false },\n                axisTicks: { show: false },\n                labels: { show: false },\n                type: \"datetime\",\n                categories: data?.map((price) => price.time_close),\n              },\n              fill: {\n                type: \"gradient\",\n                gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n              },\n              colors: [\"#0fbcf9\"],\n              tooltip: {\n                y: {\n                  formatter: (value) => `$${value.toFixed(2)}`,\n                },\n              },\n            }}\n          /> */}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import styled from \"styled-components\";\nimport { InfoData, PriceData } from \"../api\";\n\nconst Rows = styled.div`\n  padding: 10px 20px;\n`;\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2.5fr;\n  width: 100%;\n  height: 40px;\n  margin-bottom: 5px;\n\n  /* background-color: rebeccapurple; */\n  place-content: center;\n  align-items: center;\n  gap: 10px;\n  border: solid 1px ${(props) => props.theme.textColor};\n\n  div:first-child {\n    /* background-color: red; */\n    text-align: end;\n    text-transform: uppercase;\n    font-weight: 500;\n  }\n`;\n\nconst Changes = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 5px;\n  margin-bottom: 40px;\n`;\n\nconst Change = styled.div<{ isRed: Boolean }>`\n  border: solid 2px ${(props) => (props.isRed ? \"red\" : \"blue\")};\n  color: ${(props) => (props.isRed ? \"red\" : \"blue\")};\n  background-color: rgba(255, 255, 255, 0.7);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  height: 50px;\n\n  div:last-child {\n    font-weight: 800;\n  }\n`;\n\ninterface IPriceProps {\n  info: InfoData;\n  price: PriceData;\n}\n\nfunction Price({ info, price }: IPriceProps) {\n  console.log(info, price);\n  return (\n    <Rows>\n      <Changes>\n        <Change isRed={price.quotes.USD.percent_change_15m > 0}>\n          <div>15m</div>\n          <div>{price.quotes.USD.percent_change_15m}%</div>\n        </Change>\n        <Change isRed={price.quotes.USD.percent_change_30m > 0}>\n          <div>30m</div>\n          <div>{price.quotes.USD.percent_change_30m}%</div>\n        </Change>\n        <Change isRed={price.quotes.USD.percent_change_1h > 0}>\n          <div>1h</div>\n          <div>{price.quotes.USD.percent_change_1h}%</div>\n        </Change>\n        <Change isRed={price.quotes.USD.percent_change_6h > 0}>\n          <div>6h</div>\n          <div>{price.quotes.USD.percent_change_6h}%</div>\n        </Change>\n        <Change isRed={price.quotes.USD.percent_change_12h > 0}>\n          <div>12h</div>\n          <div>{price.quotes.USD.percent_change_12h}%</div>\n        </Change>\n        <Change isRed={price.quotes.USD.percent_change_24h > 0}>\n          <div>24h</div>\n          <div>{price.quotes.USD.percent_change_24h}%</div>\n        </Change>\n        <Change isRed={price.quotes.USD.percent_change_7d > 0}>\n          <div>7d</div>\n          <div>{price.quotes.USD.percent_change_7d}%</div>\n        </Change>\n        <Change isRed={price.quotes.USD.percent_change_30d > 0}>\n          <div>30d</div>\n          <div>{price.quotes.USD.percent_change_30d}%</div>\n        </Change>\n      </Changes>\n      <Row>\n        <div>started at : </div>\n        <div>{info.started_at}</div>\n      </Row>\n      <Row>\n        <div>proof type : </div>\n        <div>{info.proof_type}</div>\n      </Row>\n      <Row>\n        <div>전고점 : </div>\n        <div>{price.quotes.USD.ath_price}</div>\n      </Row>\n      <Row>\n        <div>전고점 day : </div>\n        <div>{price.quotes.USD.ath_date}</div>\n      </Row>\n      <Row>\n        <div>전고점 대비 : </div>\n        <div>{price.quotes.USD.percent_from_price_ath}%</div>\n      </Row>\n    </Rows>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers, InfoData, PriceData } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { Helmet } from \"react-helmet\";\nimport { useRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  height: 120vh;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  /* padding: 100px 0px; */\n  display: grid;\n  grid-template-columns: 1fr 2fr 1fr;\n  place-content: center;\n  padding: 0 20px;\n  gap: 20px;\n`;\n\nconst Back = styled.button<{ isDark: boolean }>`\n  display: flex;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  height: 30%;\n  justify-self: start;\n  align-self: center;\n  border-radius: 5px;\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n  font-size: 30px;\n  font-weight: 500;\n  background-color: ${(props) =>\n    props.isDark ? props.theme.textColor : props.theme.bgColor};\n  color: ${(props) => props.theme.accentColor};\n  text-align: center;\n`;\nconst Title = styled.h1`\n  font-size: 30px;\n  color: ${(props) => props.theme.accentColor};\n  grid-column: 2 / 3;\n  place-self: center;\n`;\n\nconst DarkToggle = styled.button`\n  display: flex;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  height: 30%;\n  place-self: center;\n  justify-self: start;\n  border-radius: 5px;\n  padding: 15px;\n  span {\n    font-size: 12px;\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n`;\n\nconst OverView = styled.div`\n  /* background-color: black; */\n  width: 90%;\n  height: 70px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: auto;\n  padding: 00px 40px;\n  margin-bottom: 30px;\n  border: 1px solid ${(props) => props.theme.textColor};\n`;\n\nconst OverViewItem = styled.div`\n  /* background-color: yellowgreen; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n\n  & span:first-child {\n    font-size: 12px;\n    text-transform: uppercase;\n  }\n`;\n\nconst Description = styled.div`\n  display: flex;\n  font-size: 15px;\n  /* text-align: center; */\n  width: 90%;\n  margin: auto;\n  margin-bottom: 30px;\n  line-height: 1.3;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n  width: 90%;\n  margin: auto;\n  justify-content: space-evenly;\n\n  margin-bottom: 40px;\n`;\n\nconst Tab = styled.div<{ isActive: boolean }>`\n  /* background-color: black; */\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 15px;\n  border: solid 1px\n    ${(props) =>\n      props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n    height: 100%;\n    padding: 20px 0px;\n\n    color: ${(props) =>\n      props.isActive ? props.theme.accentColor : props.theme.textColor};\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\n// ------ function ------\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  console.log(coinId);\n  // const { name } = useLocation().state as RouteState;\n  // console.log(name);\n  const { state } = useLocation<RouteState>();\n  // console.log(state?.name);\n  const chartMatch = useRouteMatch(\"/:random1/chart\");\n  const priceMatch = useRouteMatch(\"/:random2/price\");\n  // console.log(chartMatch, priceMatch);\n  const [DarkAtom, setDarkAtom] = useRecoilState(isDarkAtom);\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => {\n      return fetchCoinInfo(coinId);\n    }\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => {\n      return fetchCoinTickers(coinId);\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state?.name : loading ? \"Loading...\" : \"abc\"}\n        </title>\n      </Helmet>\n      <Header>\n        <Back isDark={DarkAtom}>\n          <Link to={`/`}>&#60; </Link>\n        </Back>\n\n        <Title>\n          {state?.name ? state?.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        <DarkToggle onClick={() => setDarkAtom((prev) => !prev)}>\n          <span>{DarkAtom ? \"white mode\" : \"dark mode\"}</span>\n        </DarkToggle>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <OverView>\n            <OverViewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverViewItem>\n            <OverViewItem>\n              <span>symbol</span>\n              <span>{infoData?.symbol}</span>\n            </OverViewItem>\n            <OverViewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverViewItem>\n          </OverView>\n\n          <Description>{infoData?.description}</Description>\n          <OverView>\n            <OverViewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverViewItem>\n            <OverViewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverViewItem>\n          </OverView>\n\n          <OverView>\n            <OverViewItem>\n              <span>total supply</span>\n              <span>{tickersData?.total_supply.toLocaleString()}</span>\n            </OverViewItem>\n\n            <OverViewItem>\n              <span>max supply</span>\n              <span>{tickersData?.max_supply.toLocaleString()}</span>\n            </OverViewItem>\n          </OverView>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link\n                to={{\n                  pathname: `/${coinId}/chart`,\n                  state: { name: infoData?.name },\n                }}\n              >\n                chart\n              </Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link\n                to={{\n                  pathname: `/${coinId}/price`,\n                  state: { name: infoData?.name },\n                }}\n              >\n                price\n              </Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path=\"/:random3/chart\">\n              <Chart coinId={coinId} />\n            </Route>\n            <Route path=\"/:random4/price\">\n              {infoData && tickersData && (\n                <Price info={infoData} price={tickersData} />\n              )}\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","// import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vh;\n  /* padding: 100px 0px; */\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  padding-right: 20px;\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n  grid-column: 2 / 3;\n  place-self: center;\n`;\n\nconst DarkToggle = styled.button`\n  display: flex;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  height: 30%;\n  place-self: center;\n  justify-self: flex-end;\n  border-radius: 5px;\n  padding: 15px;\n  span {\n    font-size: 12px;\n  }\n`;\n\nconst CoinsList = styled.ul``;\nconst CoinCard = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border: solid 1px ${(props) => props.theme.textColor};\n\n  border-radius: 15px;\n  margin-bottom: 10px;\n  img {\n    height: 40px;\n    width: 40px;\n    margin-right: 10px;\n  }\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    /* display: block; */\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    border: solid 1px ${(props) => props.theme.accentColor};\n    a {\n      color: ${(props) => props.theme.accentColor};\n      font-weight: 500;\n    }\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\n// -------- fucntion --------\n\nfunction Coins() {\n  interface coinsState {\n    id: string;\n    is_active: boolean;\n    is_new: boolean;\n    name: string;\n    rank: number;\n    symbol: string;\n    type: string;\n  }\n\n  const { isLoading, data } = useQuery<coinsState[]>(\"allCoins\", fetchCoins);\n\n  const [DarkAtom, setDarkAtom] = useRecoilState(isDarkAtom);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n        <DarkToggle onClick={() => setDarkAtom((prev) => !prev)}>\n          <span>{DarkAtom ? \"white mode\" : \"dark mode\"}</span>\n        </DarkToggle>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <CoinCard key={CoinCard.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}/chart`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </CoinCard>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"black\",\n  textColor: \"white\",\n  accentColor: \"tomato\",\n  cardBgColor: \"transparent\",\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"smokewhite\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n\n// export const lightTheme: DefaultTheme = {\n//     bgColor: \"white\",\n//     textColor: \"black\",\n//     btnColor: \"tomato\",\n//   };\n\n//   export const darkTheme: DefaultTheme = {\n//     bgColor: \"black\",\n//     textColor: \"white\",\n//     btnColor: \"teal\",\n//   };\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video, button {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n\n// import styled from \"styled-components\";\n\n// function App() {\n//   const Container = styled.div`\n//     background-color: ${(props) => props.theme.bgColor};\n//   `;\n\n//   const H2 = styled.h2`\n//     color: ${(props) => props.theme.textColor};\n//   `;\n\n//   return (\n//     <div>\n//       <Container>\n//         <H2>hi</H2>\n//       </Container>\n//     </div>\n//   );\n// }\n\n//--------------------\n\n// import React, { useState } from \"react\";\n// function App() {\n//   const [username, setUsername] = useState(\"\");\n\n//   const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n//     // setValue(event.currentTarget.value);\n//     const {\n//       currentTarget: { value },\n//     } = event;\n//     setUsername(value);\n//   };\n\n//   const abc = (event: React.FormEvent<HTMLFormElement>) => {\n//     event.preventDefault();\n//     console.log(`hello ${username}`);\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={abc}>\n//         <input\n//           value={username}\n//           type=\"text\"\n//           onChange={onChange}\n//           placeholder=\"hello\"\n//         />\n//         <button>login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// --------\n\n//\n// import Circle from \"./Circle\";\n\n// function App() {\n//   return (\n//     <div>\n//       <Circle bgColor=\"teal\" />\n//       <Circle bgColor=\"tomato\" borderColor=\"black\" />\n//     </div>\n//   );\n// }\n\n// ---------------------\n\n// const Father = styled.div`\n//   display: flex;\n// `;\n\n// const Box = styled.div`\n//   background-color: ${(props) => props.bgColor};\n//   width: 100px;\n//   height: 100px;\n// `;\n\n// const Circle = styled(Box)`\n//   border-radius: 50px;\n// `;\n\n// function App() {\n//   return (\n//     <Father>\n//       <Box bgColor=\"teal\" />\n//       <Circle bgColor=\"tomato\" />\n//     </Father>\n//   );\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}